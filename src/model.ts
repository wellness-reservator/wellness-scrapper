export interface RoomNode {
  id: number;

  text: string;
}

export interface LessonNode {
  name: string;

  beginDate: string;

  endDate: string;

  nbPlace: number;

  duration: string;
}

// Generated by https://quicktype.io

export interface Booking {
  activityIdList:                      string;
  beginDate:                           string;
  bookingcreationtype:                 null;
  calories:                            null;
  coachIdList:                         string;
  commentary:                          string;
  creationDate:                        string;
  creationModificationUserName:        string;
  creationUser:                        number;
  currentPlaceInUse:                   null;
  customerDetail:                      CustomerDetail[];
  customerIdList:                      string;
  endDate:                             string;
  frequentation:                       null;
  id:                                  number;
  inSelection:                         boolean;
  intensity:                           null;
  isInvited:                           boolean;
  lastModificationDate:                string;
  lastModificationUser:                number;
  lastModificationUserName:            string;
  level:                               null;
  linkedBookingId:                     null;
  lockDate:                            null;
  lockUser:                            null;
  lockUserName:                        null;
  nbPlace:                             number;
  nbPlaceInUsed:                       number;
  objectByBookingList:                 string;
  onlineInscriptionDisable:            null;
  participant:                         Participant[];
  participantTooltipType:              string;
  participantType:                     string;
  recbookingId:                        number;
  roomIdList:                          string;
  showDetails:                         boolean;
  specificBooking:                     boolean;
  specificBookingStoredFileId:         null;
  specificPersonalEquipmentTemplateId: null;
  suppressionDate:                     null;
  suppressionUser:                     null;
  typeOfBooking:                       TypeOfBooking;
  waitingList:                         string;
  waitingListCustomerDetail:           null;
  waitingListCustomerIdList:           null;
  activity:                            Activity;
}

export interface Activity {
  aboMandatory:                           number;
  aboNotPresentMessageType:               number;
  activityGroupId:                        null;
  activityTypeId:                         null;
  address:                                null;
  beginDate:                              null;
  calories:                               null;
  city:                                   null;
  coachMissingNotification:               null;
  coachSelectionTypeId:                   number;
  colorCode:                              null;
  cost:                                   null;
  customerSelectionMandatory:             boolean;
  defaultNbPlace:                         number;
  description:                            null;
  disabled:                               boolean;
  duration:                               string;
  endDate:                                null;
  exclusive:                              boolean;
  extraparam:                             null;
  fixedPeriod:                            boolean;
  fulladdress:                            null;
  hasNotOpeningHour:                      boolean;
  id:                                     number;
  intensity:                              null;
  level:                                  null;
  mail:                                   null;
  maxAnticipatedBooking:                  null;
  maxAnticipatedBookingDelay:             null;
  maxAnticipatedBookingGap:               number;
  maxCancellationDelay:                   number;
  maxNbCoach:                             number;
  maxOnlineInscription:                   number;
  minAnticipatedBookingDelay:             number;
  minAnticipatedBookingDelaySpecificHour: string;
  minAnticipatedBookingDelayType:         number;
  mobilePictureStoredFileId:              null;
  name:                                   string;
  nbCoachMandatory:                       number;
  nbMaxLockOnlineInscription:             number;
  onlineAboMandatory:                     null;
  onlineToolTipStoredFileId:              null;
  ootCancellationCounted:                 null;
  participantTooltipTypeId:               number;
  participantTypeId:                      number;
  phone:                                  null;
  postcode:                               null;
  scheduled:                              boolean;
  shortDescription:                       null;
  storedFileId:                           null;
  subname:                                null;
  supplierId:                             number;
  templatefamilyId:                       number;
  unsubscriptionTypeId:                   number;
  waitingListEnabled:                     null;
  waitingListSize:                        null;
  waitngListOutLimit:                     null;
  website:                                null;
}

export interface CustomerDetail {
  $className:   ClassName;
  id:           null;
  mail:         null;
  borndate:     null;
  unpayedSale:  null;
  name:         null;
  prospect:     null;
  surname:      null;
  storedFileId: null;
  aboList:      null;
  telephone:    null;
}

export enum ClassName {
  CustomerForPlanning = "CustomerForPlanning",
}

export interface Participant {
  aboByParticipantList:         any[];
  afterBookInformation:         null;
  bookingId:                    number;
  creationtype:                 number;
  customerId:                   number;
  customerQuantity:             number;
  entry:                        null;
  firstParticipantDetails:      null;
  forthParticipantDetails:      ForthParticipantDetails;
  id:                           number;
  options:                      null;
  personalEquipmentInformation: null;
  recParticipantId:             null;
  right:                        boolean;
  secondParticipantDetails:     null;
  thirdParticipantDetails:      null;
}

export interface ForthParticipantDetails {
  arrived:       null;
  id:            number;
  participantId: number;
  partnerlookup: null;
  presence:      Presence;
}

export enum Presence {
  Present = "PRESENT",
}

export interface TypeOfBooking {
  activityId:                 null;
  coachId:                    null;
  cost:                       null;
  customerSelectionMandatory: boolean;
  defaultNbPlace:             number;
  duration:                   string;
  id:                         null;
  roomId:                     null;
  supplierId:                 null;
}
